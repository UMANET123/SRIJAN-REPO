swagger: "2.0"
info:
  description: "This is the microservice to maintain the balance of the wallet and the multiple expiries of each top up"
  version: "1.0.0"
  title: "Developer Wallet Microservice"
host: "13.232.77.36"
basePath: "/v1/wallet"
schemes:
- "https"
- "http"
paths:

  /topup:
    post: 
      tags:
        - "Topup"
      summary: "Insert a new Topup into the MS database"
      operationId: "createTopup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Topup information to add to the MS database"
          required: true
          schema:
            $ref: "#/definitions/InsertTopUp"
      responses:
        201:
          description: "Created"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
          
  /{developerID}/refresh:
    put:
      tags:
        - "Refresh Topup"
      summary: "Refresh a Topup into Apigee"
      operationId: "reloadTopup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "developerID"
          type: "string"
          required: true
      responses:
        200:
          description: "Success"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
          
  /{developerID}/topups:
    get:
      tags:
        - "List Topups"
      summary: "List all Topups"
      operationId: "listTopups"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "path"
          name: "developerID"
          type: "string"
          required: true
      responses:
        200:
          description: "Success response ordered by expiry date DESC"
          schema:
            $ref: "#/definitions/ListTopUps"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
  
  /log:
    post:
      tags:
        - "Log Apigee messages"
      summary: "Log Apigee Messages into the logger"
      operationId: "loggerApigee"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          schema:
            type: "object"
            properties:
              severity:
                type: "string"
                enum: [INFO, WARN, ERROR]
              message:
                type: "string"
            example:
              severity: "INFO"
              message: "The balance has been added"
      responses:
        201:
          description: "Created log"
        400:
          description: "Bad request"
        500:
          description: "Internal Server Error"
        
definitions:
  InsertTopUp:
    type: "object"
    properties:
      developerID:
        type: "string"
      primaryBalance:
        type: "number"
        format: "float"
      smsmoBalance:
        type: "number"
        format: "float"
      topupExpiry:
        type: "string"
        format: "date-time"
      transactionID:
        type: "string"
      transactionType:
        type: "string"
    example:
      developerID: "dab79e9ee035417bd63ff3ca2cbe6dd2"
      primaryBalance: 1000.10
      smsmoBalance: 500
      topupExpiry: "2019-05-01T06:55:54.423Z"
      transactionID: "6579c70dabf14dd50d58ba48bc81b550"
      transactionType: "BANK_TRANSFER"
  ListTopUps:
    type: "array"
    items:
      type: "object"
      properties:
        primaryBalance:
          type: "number"
          format: "float"
        smsmoBalance:
          type: "number"
          format: "float"
        expiry:
          type: "string"
          format: "date-time"